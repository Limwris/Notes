apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.nichesoftware.notes"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        // Gradle Plugin 1.5
        // disable limited support for vector drawables fro Android Studio 1.4
        generatedDensities = ['xxhdpi', 'xhdpi', 'hdpi']

        // Gradle Plugin 2.0
        // disable limited support for vector drawables fro Android Studio 1.4
        // vectorDrawables.useSupportLibrary = true
    }

    // Gradle Plugin 1.5
    // disable limited support for vector drawables fro Android Studio 1.4
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile new StringBuffer('com.android.support:appcompat-v7:').append(rootProject.ext.supportLibVersion).toString()
    compile new StringBuffer('com.android.support:recyclerview-v7:').append(rootProject.ext.supportLibVersion).toString()
    compile new StringBuffer('com.android.support:cardview-v7:').append(rootProject.ext.supportLibVersion).toString()
    compile new StringBuffer('com.android.support:design:').append(rootProject.ext.supportLibVersion).toString()
    compile new StringBuffer('com.android.support:support-vector-drawable:').append(rootProject.ext.supportLibVersion).toString()
    // Retrofit
    compile new StringBuffer('com.squareup.retrofit2:retrofit:').append(rootProject.ext.retrofitVersion).toString()
    compile new StringBuffer('com.squareup.retrofit2:converter-gson:').append(rootProject.ext.retrofitVersion).toString()
    // GCM
    compile new StringBuffer("com.google.android.gms:play-services:").append(rootProject.ext.playServicesVersion).toString()


    testCompile new StringBuffer('junit:junit:').append(rootProject.ext.junitVersion).toString()
    testCompile new StringBuffer('org.mockito:mockito-all:').append(rootProject.ext.mockitoVersion).toString()
    testCompile new StringBuffer('org.powermock:powermock-module-junit4:').append(rootProject.ext.powerMockVersion).toString()
    testCompile new StringBuffer('org.powermock:powermock-api-mockito:').append(rootProject.ext.powerMockVersion).toString()
}
